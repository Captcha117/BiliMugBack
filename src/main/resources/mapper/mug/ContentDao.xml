<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.oken1.modules.mug.dao.ContentDao">
    <select id="gameContent" resultType="map">
        <![CDATA[
        select
            upper( replace ( uuid( ), "-", "" ) ) pk_id,
            r.aid aid,
            'G' type,
            r.game_id content_id,
            current_timestamp() update_time
        from
            (
            select
                v.aid,
                v.title,
                z.*,
                row_number ( ) over ( PARTITION by v.aid order by v.aid, z.filter_index, z.keyword_index ) row_num
            from
                mug_video v
                join (
                select
                    g.game_id,
                    g.common_name,
                    g.filter_index,
                    k.keyword,
                    k.keyword_index
                from
                    mug_game g
                    join mug_game_keyword k on g.game_id = k.game_id
                order by
                    g.filter_index,
                    k.keyword_index
                ) z on instr( REPLACE ( v.title, ' ', '' ), z.keyword ) > 0
            where
                from_unixtime( v.pub_time ) >= date '2019-5-1'
                and v.aid not in ( select c.aid from mug_video_content c where c.type = 'G' )
            ) r
        where
            r.row_num = 1
        ]]>
    </select>

    <insert id="insertGameContent">
        <![CDATA[
        insert mug_video_content ( pk_id, aid, type, content_id, update_time ) select
        upper( replace ( uuid( ), "-", "" ) ) pk_id,
        r.aid aid,
        'G' type,
        r.game_id content_id,
        current_timestamp ( ) update_time
        from
            (
            select
                v.aid,
                v.title,
                z.*,
                row_number ( ) over ( PARTITION by v.aid order by v.aid, z.filter_index, z.keyword_index ) row_num
            from
                mug_video v
                join (
                select
                    g.game_id,
                    g.common_name,
                    g.filter_index,
                    k.keyword,
                    k.keyword_index
                from
                    mug_game g
                    join mug_game_keyword k on g.game_id = k.game_id
                order by
                    g.filter_index,
                    k.keyword_index
                ) z on instr( REPLACE ( v.title, ' ', '' ), z.keyword ) > 0
            where
                from_unixtime( v.pub_time ) >= date '2019-5-1'
                and v.aid not in ( select c.aid from mug_video_content c where c.type = 'G' )
            ) r
        where
            r.row_num = 1
        ]]]>
    </insert>
</mapper>