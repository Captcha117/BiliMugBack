<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.oken1.modules.mug.dao.VideoDao">
    <select id="getVideosByGameId" resultType="map">
        SELECT
        v.aid,
        v.title,
        v.pub_time,
        v.copyright,
        v.uid,
        v.play,
        u.id,
        c.type
        FROM
        mug_video v
        LEFT JOIN mug_video_content c ON v.aid = c.aid
        LEFT JOIN mug_uploader u ON v.uid = u.uid
        WHERE
        ( c.type = 'G' and c.content_id = #{gameId} )
        or ( c.type = 'S' and c.content_id in ( select s.song_id from mug_song s where s.game_id = #{gameId} ) )
        or ( c.type = 'C' and c.content_id in ( select c.chart_id from mug_chart c
        left join mug_song s on s.song_id = c.song_id left join mug_game g on s.game_id = g.game_id
        where g.game_id = #{gameId} ) )
        ORDER BY
        play DESC
    </select>

    <select id="getVideosBySongId" resultType="map">
        select
        *
        from
        v_video v
        where
        v.type = 'S'
        and v.content_id = #{songId}
    </select>

    <select id="getRank" resultType="map">
        <![CDATA[
        select
        u.uid,
        u.id,
        z.play
        from
        (
        select
        v.uid,
        sum( v.play ) play
        from
        mug_video v
        where
        v.pub_time < #{date}
        group by
        v.uid
        ) z
        left join mug_uploader u on z.uid = u.uid
        order by
        z.play desc
        limit 20]]>
    </select>

    <select id="getRankWithoutDssq" resultType="map">
<!--        <![CDATA[-->
<!--        select-->
<!--        u.uid,-->
<!--        u.id,-->
<!--        z.play_nodssq-->
<!--        from-->
<!--        (-->
<!--        select-->
<!--        v.uid,-->
<!--        sum( case when v.dssq is null then v.play else 0 end ) play_nodssq-->
<!--        from-->
<!--        mug_video v-->
<!--        where-->
<!--        from_unixtime( v.pub_time ) < #{date}-->
<!--        group by-->
<!--        v.uid-->
<!--        ) z-->
<!--        left join mug_uploader u on z.uid = u.uid-->
<!--        order by-->
<!--        z.play_nodssq desc-->
<!--        limit 40]]>-->
        <![CDATA[
        select
        u.uid,
        u.id,
        z.play_avg ,
        z.count
        from
        (
        select
        v.uid,
        avg( v.play ) play_avg,
        sum( 1 ) count
        from
        mug_video v
        where
        v.dssq is null
        and v.copyright = '1'
        and v.pub_time < #{date} group by v.uid having sum( 1 ) >= 15
        ) z
        left join mug_uploader u on z.uid = u.uid
        order by
        z.play_avg desc
        limit 30]]>
    </select>
</mapper>