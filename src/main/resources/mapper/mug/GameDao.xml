<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.oken1.modules.mug.dao.GameDao">
    <!--游戏列表-->
    <select id="getGameList" resultType="map">
        SELECT g.game_id      GameId,
               g.common_name  CommonName,
               g.other_name   OtherName,
               g.icon_id      IconId,
               g.icon_version IconVersion
        FROM mug_game g
        where g.parent_id is null
        ORDER BY g.common_name
    </select>

    <resultMap id="GameInfo" type="java.util.LinkedHashMap">
        <result column="GameId" property="GameId"/>
        <result column="CommonName" property="CommonName"/>
        <result column="OtherName" property="OtherName"/>
        <result column="IconVersion" property="IconVersion"/>
        <result column="Developer" property="Developer"/>
        <collection property="Difficulties" select="getDifficultiesByGameId" javaType="java.util.List"
                    column="{gameId=gameId}">
            <result column="DifficultyId" property="DifficultyId"/>
            <result column="DifficultyName" property="DifficultyName"/>
            <result column="DifficultyAbbr" property="DifficultyAbbr"/>
            <result column="Color" property="Color"/>
        </collection>
        <collection property="Sns" select="getSnsByGameId" javaType="java.util.List" column="{gameId=gameId}">
            <result column="SnsType" property="SnsType"/>
            <result column="Icon" property="Icon"/>
            <result column="Url" property="Url"/>
        </collection>
    </resultMap>

    <!--游戏信息-->
    <select id="getGameInfoByGameId" resultMap="GameInfo">
        SELECT g.game_id                                         GameId,
               g.common_name                                     CommonName,
               left(g.other_name, LOCATE(',', g.other_name) - 1) OtherName,
               g.icon_version                                    IconVersion,
               c.company_name                                    Developer
        FROM mug_game g
                 LEFT JOIN mug_company c ON g.developer = c.company_id
        WHERE g.game_id = #{gameId}
    </select>

    <select id="getSnsByGameId" resultType="map">
        SELECT s.sns_type SnsType,
               s.sns_url  Url
        FROM mug_sns AS s
                 LEFT JOIN tb_sns_type AS t ON s.sns_type = t.sns_type
        WHERE s.item_type = 'G'
          AND s.item_id = #{gameId}
        ORDER BY t.inx
    </select>

    <select id="getDifficultiesByGameId" resultType="map">
        SELECT d.difficulty_id   DifficultyId,
               d.difficulty_name DifficultyName,
               d.difficulty_abbr DifficultyAbbr,
               d.color           Color
        FROM mug_difficulty d
        WHERE d.game_id = #{gameId}
        ORDER BY d.inx
    </select>

    <!--游戏曲目-->
    <select id="getSongsByGameId" resultType="map">
        SELECT song_id      SongId,
               single_id    SingleId,
               title        Title,
               artist       Artist,
               length       Length,
               release_date ReleaseDate,
               bpm          Bpm
        FROM mug_song s
        WHERE s.game_id = #{gameId}
        ORDER BY s.inx
    </select>

    <select id="getGamePlayData" resultType="map">
        SELECT
        <choose>
            <when test='type == "D"'>
                v.pub_date
            </when>
            <when test='type == "W"'>
                DATE_FORMAT( v.pub_date, '%y-%v' )
            </when>
            <when test='type == "M"'>
                DATE_FORMAT( v.pub_date, '%y-%m' )
            </when>
        </choose>
        Time,
        sum(v.play / v.game_count) AllPlay,
        sum(IF(v.dssq, 0, v.play / v.game_count)) Play,
        count(1) AllCount,
        sum(IF(v.dssq, 0, 1)) Count
        FROM v_video v
        WHERE instr(v.game_id, #{gameId}) > 0
        AND v.pub_date BETWEEN #{startDate} AND #{endDate}
        <choose>
            <when test='type == "D"'>
                GROUP BY v.pub_date
                ORDER BY v.pub_date
            </when>
            <when test='type == "W"'>
                GROUP BY DATE_FORMAT( v.pub_date, '%y-%v' )
                ORDER BY DATE_FORMAT( v.pub_date, '%y-%v' )
            </when>
            <when test='type == "M"'>
                GROUP BY DATE_FORMAT( v.pub_date, '%y-%m' )
                ORDER BY DATE_FORMAT( v.pub_date, '%y-%m' )
            </when>
        </choose>
    </select>
</mapper>