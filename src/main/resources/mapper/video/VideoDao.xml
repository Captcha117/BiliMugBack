<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.oken1.modules.video.dao.VideoDao">
    <select id="getVideosByGameId" resultType="map">
        SELECT v.aid,
               v.title,
               v.pub_time,
               v.copyright,
               v.uid,
               v.play,
               u.id,
               u.face,
               v.cover
        FROM mug_video v
                 LEFT JOIN mug_game_content c ON v.aid = c.aid
                 LEFT JOIN mug_uploader u ON v.uid = u.uid
        WHERE c.game_id = #{gameId}
        <if test="startDate != null">
            AND date(v.pub_time) >= str_to_date(#{startDate}, '%Y-%m-%d' )
        </if>
        <if test="endDate != null">
            AND str_to_date(#{endDate}, '%Y-%m-%d' ) >= date(v.pub_time)
        </if>
        ORDER BY play DESC
        LIMIT 20
    </select>

    <select id="getVideosBySongId" resultType="map">
        select aid       Aid,
               bid       Bid,
               title     Title,
               pub_time  PubTime,
               copyright Copyright,
               uid       Uid,
               play      Play,
               cover     Cover,
               tag,
               id        Id,
               type,
               content_id
        from v_video v
        where v.type = 'S'
          and v.content_id = #{songId}
    </select>

    <select id="getUpRank" resultType="map">
        SELECT
        r.*
        FROM
        (
        SELECT
        z.uid,
        u.id,
        round( sum( z.play * z.proportion ), 1 ) play,
        count( 1 ) count
        FROM
        (
        SELECT
        v.uid,
        v.pub_time,
        v.play,
        <choose>
            <when test="needProportion">
                ifnull( f.proportion, 1 ) proportion
            </when>
            <otherwise>
                1 proportion
            </otherwise>
        </choose>
        FROM
        mug_video v
        <if test="needProportion">
            LEFT JOIN mug_play_config f ON datediff( str_to_date(#{date},'%Y-%m-%d'), date( v.pub_time ) ) = f.date_diff
        </if>
        WHERE
        date( v.pub_time ) >= str_to_date(#{startDate},'%Y-%m-%d')
        AND str_to_date(#{date},'%Y-%m-%d') >= date( v.pub_time )
        and v.aid not in (select d.aid from mug_dssq d)
        ) z
        LEFT JOIN mug_uploader u ON z.uid = u.uid
        GROUP BY
        z.uid
        ) r
        ORDER BY
        r.play DESC
        LIMIT 30
    </select>

    <select id="getGameRank" resultType="map">
        SELECT t.game_id,
               sum(t.game_play) play,
               g.game_name    game
        FROM (
                 SELECT c.game_id,
                        round(v.play / z.game_count) game_play
                 FROM mug_video v
                          JOIN mug_game_content c ON v.aid = c.aid
                          LEFT JOIN mug_dssq d ON v.aid = d.aid
                          LEFT JOIN (SELECT c.aid, count(1) game_count FROM mug_game_content c GROUP BY c.aid) z
                                    ON z.aid = v.aid
                 WHERE d.aid IS NULL
                   AND date(v.pub_time) >= str_to_date(#{startDate}, '%Y-%m-%d')
                   AND str_to_date(#{date}, '%Y-%m-%d') >= date(v.pub_time)
             ) t
                 LEFT JOIN mug_game g ON t.game_id = g.game_id
        GROUP BY t.game_id
        ORDER BY play DESC
        LIMIT 30
    </select>

    <select id="getRankWithoutDssq" resultType="map">
        <!--        <![CDATA[-->
        <!--        select-->
        <!--        u.uid,-->
        <!--        u.id,-->
        <!--        z.play_nodssq-->
        <!--        from-->
        <!--        (-->
        <!--        select-->
        <!--        v.uid,-->
        <!--        sum( case when v.dssq is null then v.play else 0 end ) play_nodssq-->
        <!--        from-->
        <!--        mug_video v-->
        <!--        where-->
        <!--        from_unixtime( v.pub_time ) < #{date}-->
        <!--        group by-->
        <!--        v.uid-->
        <!--        ) z-->
        <!--        left join mug_uploader u on z.uid = u.uid-->
        <!--        order by-->
        <!--        z.play_nodssq desc-->
        <!--        limit 40]]>-->
        <![CDATA[
        select
        u.uid,
        u.id,
        z.play_avg ,
        z.count
        from
        (
        select
        v.uid,
        avg( v.play ) play_avg,
        sum( 1 ) count
        from
        mug_video v
        where
        v.dssq is null
        and v.copyright = '1'
        and v.pub_time < #{date} group by v.uid having sum( 1 ) >= 15
        ) z
        left join mug_uploader u on z.uid = u.uid
        order by
        z.play_avg desc
        limit 30]]>
    </select>

    <select id="getProcessVideoList" resultType="map">
        select v.*, z.*, u.id, d.keyword dssq_keyword
        from mug_video v
                 left join (
            select c.aid,
                   group_concat(c.keyword) keyword,
                   group_concat(c.game_id) game_id,
                   group_concat(g.game_name) game_name
            from mug_game_content c
                     left join mug_game g on c.game_id = g.game_id
            group by c.aid) z on v.aid = z.aid
        left join mug_uploader u on v.uid = u.uid
        left join mug_dssq d on v.aid = d.aid
        WHERE v.play >= #{minPlay}
        <if test="gameId != null">
            and instr(z.game_id, #{gameId}) > 0
        </if>
        <if test="startDate != null">
            AND date(v.pub_time) >= str_to_date(#{startDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null">
            and str_to_date(#{endDate}, '%Y-%m-%d') >= date( v.pub_time )
        </if>
        <if test="search != null">
            and (v.uid = #{search} or instr(u.id, #{search}) > 0 or v.aid = #{search})
        </if>
        <if test="isClassify != null">
            <choose>
                <when test="isClassify">
                    and z.game_id is not null
                </when>
                <otherwise>
                    and z.game_id is null
                </otherwise>
            </choose>
        </if>
        <if test="isDssq != null">
            <choose>
                <when test="isDssq">
                    and d.aid is not null
                </when>
                <otherwise>
                    and d.aid is null
                </otherwise>
            </choose>
        </if>
        order by v.play desc
    </select>

    <select id="getUnclassifiedDssq" resultType="map">
        SELECT
        v.*,
        c.game_id
        FROM
        mug_video v
        left join mug_game_content c on v.aid = c.aid
        WHERE
        v.aid NOT IN ( SELECT d.aid FROM mug_dssq d )
        AND date( v.pub_time ) >= str_to_date(#{startDate},'%Y-%m-%d')
        <if test="endDate!=null">
            and str_to_date(#{endDate}, '%Y-%m-%d') >= date( v.pub_time )
        </if>
        <if test="updateDate!=null">
            and date( v.update_time ) >= str_to_date(#{updateDate},'%Y-%m-%d')
        </if>
        AND v.play >= #{minPlay}
        order by v.play desc
    </select>
</mapper>