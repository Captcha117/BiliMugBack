<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.oken1.modules.person.dao.PersonDao">
    <select id="getPersonGameByPersonId" resultType="map">
        SELECT g.game_id,
               g.common_name,
               g.other_name,
               g.icon_version,
               g.developer,
               c.company_name
        FROM mug_game g
                 left join mug_company c on g.developer = c.company_id
        WHERE g.game_id IN (
            SELECT DISTINCT (s.game_id)
            FROM mug_song s
            WHERE instr(s.song_artist, #{personId}) > 0
               or instr(s.chart_designer, #{personId}) > 0
        )
        order by g.common_name
    </select>
    <select id="getPersonSongByPersonId" resultType="map">
        SELECT s.song_id,
               s.game_id,
               g.common_name,
               g.other_name,
               g.icon_version,
               s.single_id,
               ms.single_title_en,
               ms.single_artist,
               s.song_title_en,
               s.song_title_jp,
               s.song_title_cn,
               s.song_artist,
               s.chart_designer,
               g.developer,
               c.company_name
        FROM mug_song s
                 left join mug_game g on s.game_id = g.game_id
                 left join mug_company c on g.developer = c.company_id
                 left join mug_single ms on s.single_id = ms.single_id
        WHERE instr(s.song_artist, #{personId}) > 0
           or instr(s.chart_designer, #{personId}) > 0
        order by s.song_title_en, g.common_name
    </select>
    <select id="getPersonSingleByPersonId" resultType="map">
        select single_id,
               single_title_en,
               single_title_jp,
               single_title_cn,
               single_alias,
               single_artist,
               single_style,
               single_cast
        from mug_single g
        where instr(g.single_artist, #{personId}) > 0
           or g.single_id in (
            SELECT s.single_id
            FROM mug_song s
            WHERE instr(s.song_artist, #{personId}) > 0
        )
        order by single_title_en
    </select>

    <!--config-->
    <select id="getPersonConfigList" resultType="map">
        select p.*, r.region_name_abbr region, if(g.group_id is null, 0, 1) is_group
        from mug_person p
                 left join tb_region r on p.person_region = r.region_code
                 left join mug_group g on p.person_id = g.group_id
        limit 100
    </select>

    <select id="getPersonInfoByPersonId" resultType="java.util.LinkedHashMap">
        select p.*, if(g.group_id is null, 0, 1) is_group
        from mug_person p
                 left join mug_group g on p.person_id = g.group_id
        where p.person_id = #{personId}
    </select>

    <select id="searchPerson" resultType="map">
        select *, r.region_name_abbr region
        from mug_person p
                 left join tb_region r on p.person_region = r.region_code
        where instr(p.person_name, #{search}) > 0
           or instr(p.person_alias, #{search}) > 0
    </select>
</mapper>